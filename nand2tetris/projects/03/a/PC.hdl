// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Or8Way(in[0]=reset, in[1]=load, in[2]=inc, in[3..7]=false, out=regload);
    Xor(a=reset, b=false, out=xres);
    Mux16(a=in, b=false, sel=xres, out=resout);
    
    Mux(a=load, b=false, sel=xres, out=shouldload);
    Mux16(a=resout, b=in, sel=shouldload, out=loadout);

    Or(a=reset, b=load, out=resorload);
    Mux(a=inc,b=false, sel=resorload, out=shouldinc);
    Mux16(a=loadout, b=inc16, sel=shouldinc, out=reginput);

    Register(in=reginput, load=regload, out=regout);
    Inc16(in=regout, out=inc16);

    And16(a=true, b=regout, out=out);
}
