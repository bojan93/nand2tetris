@256
D=A
@SP
M=D
@Sys.init
0;JMP
//type=FUNCTION, originFileName=Class1, arg1=Class1.set, arg2=0
(Class1.set)

//type=PUSH, originFileName=Class1, arg1=argument, arg2=0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//type=POP, originFileName=Class1, arg1=static, arg2=0
@SP
M=M-1
A=M
D=M
@Class1.vm.0
M=D
//type=PUSH, originFileName=Class1, arg1=argument, arg2=1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//type=POP, originFileName=Class1, arg1=static, arg2=1
@SP
M=M-1
A=M
D=M
@Class1.vm.1
M=D
//type=PUSH, originFileName=Class1, arg1=constant, arg2=0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//type=RETURN, originFileName=Class1, arg1=null, arg2=null
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
D=M-D
A=D
D=M
@retAddr
M=D
            @SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@4
D=A
@endFrame
D=M-D
A=D
D=M
@LCL
M=D
@3
D=A
@endFrame
D=M-D
A=D
D=M
@ARG
M=D
@2
D=A
@endFrame
D=M-D
A=D
D=M
@THIS
M=D
@endFrame
D=M-1
A=D
D=M
@THAT
M=D
@retAddr
A=M
0;JMP
//type=FUNCTION, originFileName=Class1, arg1=Class1.get, arg2=0
(Class1.get)

//type=PUSH, originFileName=Class1, arg1=static, arg2=0
@Class1.vm.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//type=PUSH, originFileName=Class1, arg1=static, arg2=1
@Class1.vm.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//type=SUB, originFileName=Class1, arg1=null, arg2=null
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//type=RETURN, originFileName=Class1, arg1=null, arg2=null
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
D=M-D
A=D
D=M
@retAddr
M=D
            @SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@4
D=A
@endFrame
D=M-D
A=D
D=M
@LCL
M=D
@3
D=A
@endFrame
D=M-D
A=D
D=M
@ARG
M=D
@2
D=A
@endFrame
D=M-D
A=D
D=M
@THIS
M=D
@endFrame
D=M-1
A=D
D=M
@THAT
M=D
@retAddr
A=M
0;JMP
//type=FUNCTION, originFileName=Sys, arg1=Sys.init, arg2=0
(Sys.init)

//type=PUSH, originFileName=Sys, arg1=constant, arg2=6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//type=PUSH, originFileName=Sys, arg1=constant, arg2=8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//type=CALL, originFileName=Sys, arg1=Class1.set, arg2=2
@SP
D=M
D=D+1
            @SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
            @SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
            @SP
A=M
M=D
@SP
M=M+1
@THIS
            @SP
A=M
M=D
@SP
M=M+1
@THAT
            @SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
//type=POP, originFileName=Sys, arg1=temp, arg2=0
@5
D=A
@0
D=D+A
@addr
M=D
@SP
M=M-1
A=M
D=M
@addr
A=M
M=D
//type=PUSH, originFileName=Sys, arg1=constant, arg2=23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//type=PUSH, originFileName=Sys, arg1=constant, arg2=15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//type=CALL, originFileName=Sys, arg1=Class2.set, arg2=2
@SP
D=M
D=D+1
            @SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
            @SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
            @SP
A=M
M=D
@SP
M=M+1
@THIS
            @SP
A=M
M=D
@SP
M=M+1
@THAT
            @SP
A=M
M=D
@SP
M=M+1
@2
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
//type=POP, originFileName=Sys, arg1=temp, arg2=0
@5
D=A
@0
D=D+A
@addr
M=D
@SP
M=M-1
A=M
D=M
@addr
A=M
M=D
//type=CALL, originFileName=Sys, arg1=Class1.get, arg2=0
@SP
D=M
D=D+1
            @SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
            @SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
            @SP
A=M
M=D
@SP
M=M+1
@THIS
            @SP
A=M
M=D
@SP
M=M+1
@THAT
            @SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
//type=CALL, originFileName=Sys, arg1=Class2.get, arg2=0
@SP
D=M
D=D+1
            @SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
            @SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
            @SP
A=M
M=D
@SP
M=M+1
@THIS
            @SP
A=M
M=D
@SP
M=M+1
@THAT
            @SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
//type=LABEL, originFileName=Sys, arg1=WHILE, arg2=null
(WHILE)
//type=GOTO, originFileName=Sys, arg1=WHILE, arg2=null
@WHILE
D;JMP
//type=FUNCTION, originFileName=Class2, arg1=Class2.set, arg2=0
(Class2.set)

//type=PUSH, originFileName=Class2, arg1=argument, arg2=0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//type=POP, originFileName=Class2, arg1=static, arg2=0
@SP
M=M-1
A=M
D=M
@Class2.vm.0
M=D
//type=PUSH, originFileName=Class2, arg1=argument, arg2=1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
//type=POP, originFileName=Class2, arg1=static, arg2=1
@SP
M=M-1
A=M
D=M
@Class2.vm.1
M=D
//type=PUSH, originFileName=Class2, arg1=constant, arg2=0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//type=RETURN, originFileName=Class2, arg1=null, arg2=null
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
D=M-D
A=D
D=M
@retAddr
M=D
            @SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@4
D=A
@endFrame
D=M-D
A=D
D=M
@LCL
M=D
@3
D=A
@endFrame
D=M-D
A=D
D=M
@ARG
M=D
@2
D=A
@endFrame
D=M-D
A=D
D=M
@THIS
M=D
@endFrame
D=M-1
A=D
D=M
@THAT
M=D
@retAddr
A=M
0;JMP
//type=FUNCTION, originFileName=Class2, arg1=Class2.get, arg2=0
(Class2.get)

//type=PUSH, originFileName=Class2, arg1=static, arg2=0
@Class2.vm.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//type=PUSH, originFileName=Class2, arg1=static, arg2=1
@Class2.vm.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//type=SUB, originFileName=Class2, arg1=null, arg2=null
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=D
@SP
M=M+1
//type=RETURN, originFileName=Class2, arg1=null, arg2=null
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
D=M-D
A=D
D=M
@retAddr
M=D
            @SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@4
D=A
@endFrame
D=M-D
A=D
D=M
@LCL
M=D
@3
D=A
@endFrame
D=M-D
A=D
D=M
@ARG
M=D
@2
D=A
@endFrame
D=M-D
A=D
D=M
@THIS
M=D
@endFrame
D=M-1
A=D
D=M
@THAT
M=D
@retAddr
A=M
0;JMP
